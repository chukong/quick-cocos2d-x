
$#include "crypto/CCCrypto.h"
$#include "native/CCNative.h"
$#include "network/CCNetwork.h"

$using namespace std;
$using namespace cocos2d;
$using namespace cocos2d::extra;

class CCCrypto
{
public:
    static int getAES256KeyLength(void);

    static LUA_STRING encryptAES256Lua @ encryptAES256 (const char* plaintext,
                                       int plaintextLength,
                                       const char* key,
                                       int keyLength);

    static LUA_STRING decryptAES256Lua @ decryptAES256 (const char* ciphertext,
                                       int ciphertextLength,
                                       const char* key,
                                       int keyLength);

    static LUA_STRING encryptXXTEALua @ encryptXXTEA (const char* plaintext,
                                      int plaintextLength,
                                      const char* key,
                                      int keyLength);

    static LUA_STRING decryptXXTEALua @ decryptXXTEA (const char* ciphertext,
                                      int ciphertextLength,
                                      const char* key,
                                      int keyLength);

    static LUA_STRING encodeBase64Lua @ encodeBase64 (const char* input, int inputLength);
    static LUA_STRING decodeBase64Lua @ decodeBase64 (const char* input);

    static LUA_STRING MD5Lua @ MD5 (char* input, bool isRawOutput);

    static LUA_STRING MD5FileLua @ MD5File(const char* path);
};

//

class CCNative
{
public:
    static void showActivityIndicator(void);
    static void hideActivityIndicator(void);

    static void createAlert(const char* title,
                            const char* message,
                            const char* cancelButtonTitle);
    static int addAlertButton(const char* buttonTitle);

    static void showAlertLua @ showAlert (LUA_FUNCTION listener);

    static void cancelAlert(void);

    static string getOpenUDID(void);
    static void openURL(const char* url);
    static string getInputText(const char* title, const char* message, const char* defaultValue);

    static const string getDeviceName(void);
    static void vibrate();
};

//

#define kCCNetworkStatusNotReachable     0
#define kCCNetworkStatusReachableViaWiFi 1
#define kCCNetworkStatusReachableViaWWAN 2

class CCNetwork
{
    static bool isLocalWiFiAvailable(void);
    static bool isInternetConnectionAvailable(void);
    static bool isHostNameReachable(const char* hostName);
    static int getInternetConnectionStatus(void);
};
