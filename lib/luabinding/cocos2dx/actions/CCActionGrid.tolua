/****************************************************************************
Copyright (c) 2010-2012 cocos2d-x.org
Copyright (c) 2009      On-Core

http://www.cocos2d-x.org

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
****************************************************************************/


/**
 * @addtogroup actions
 * @{
 */

/** @brief Base class for Grid actions */
class CCGridAction : public CCActionInterval
{
};

/**
 @brief Base class for CCGrid3D actions.
 Grid3D actions can modify a non-tiled grid.
 */
class CCGrid3DAction : public CCGridAction
{
};

/** @brief Base class for CCTiledGrid3D actions */
class CCTiledGrid3DAction : public CCGridAction
{
    /** creates the action with size and duration */
    static CCTiledGrid3DAction* create(float duration, CCSize gridSize);
};

/** @brief CCAccelDeccelAmplitude action */
class CCAccelDeccelAmplitude : public CCActionInterval
{
    /** creates the action with an inner action that has the amplitude property, and a duration time */
    static CCAccelDeccelAmplitude* create(CCAction *pAction, float duration);
};

/** @brief CCAccelAmplitude action */
class CCAccelAmplitude : public CCActionInterval
{
    /** creates the action with an inner action that has the amplitude property, and a duration time */
    static CCAccelAmplitude* create(CCAction *pAction, float duration);
};

/** @brief CCDeccelAmplitude action */
class CCDeccelAmplitude : public CCActionInterval
{
    /** creates the action with an inner action that has the amplitude property, and a duration time */
    static CCDeccelAmplitude* create(CCAction *pAction, float duration);
};

/** @brief CCStopGrid action.
 @warning Don't call this action if another grid action is active.
 Call if you want to remove the the grid effect. Example:
 CCSequence::actions(Lens::action(...), CCStopGrid::action(...), NULL);
 */
class CCStopGrid : public CCActionInstant
{
    /** Allocates and initializes the action */
    static CCStopGrid* create(void);
};

/** @brief CCReuseGrid action */
class CCReuseGrid : public CCActionInstant
{
    /** creates an action with the number of times that the current grid will be reused */
    static CCReuseGrid* create(int times);
};

// end of actions group
/// @}
