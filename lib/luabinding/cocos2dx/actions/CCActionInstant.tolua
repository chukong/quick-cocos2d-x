/****************************************************************************
Copyright (c) 2010-2012 cocos2d-x.org
Copyright (c) 2008-2010 Ricardo Quesada
Copyright (c) 2011 Zynga Inc.

http://www.cocos2d-x.org

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
****************************************************************************/

/**
 * @addtogroup actions
 * @{
 */

/**
@brief Instant actions are immediate actions. They don't have a duration like
the CCIntervalAction actions.
*/
class CCActionInstant : public CCFiniteTimeAction //<NSCopying>
{
};

/** @brief Show the node
*/
class CCShow : public CCActionInstant
{
    /** Allocates and initializes the action */
    static CCShow * create();
};

/**
@brief Hide the node
*/
class CCHide : public CCActionInstant
{
    /** Allocates and initializes the action */
    static CCHide * create();
};

/** @brief Toggles the visibility of a node
*/
class CCToggleVisibility : public CCActionInstant
{
    /** Allocates and initializes the action */
    static CCToggleVisibility * create();
};

/**
@brief Remove the node
*/
class CCRemoveSelf : public CCActionInstant
{
    /** create the action */
    static CCRemoveSelf * create(bool isNeedCleanUp = true);
};

/**
@brief Flips the sprite horizontally
@since v0.99.0
*/
class CCFlipX : public CCActionInstant
{
    /** create the action */
    static CCFlipX * create(bool x);
};

/**
@brief Flips the sprite vertically
@since v0.99.0
*/
class CCFlipY : public CCActionInstant
{
    /** create the action */
    static CCFlipY * create(bool y);
};

/** @brief Places the node in a certain position
*/
class CCPlace : public CCActionInstant //<NSCopying>
{
    /** creates a Place action with a position */
    static CCPlace * create(CCPoint pos);
};

/** @brief Calls a 'callback'
*/
class CCCallFunc : public CCActionInstant //<NSCopying>
{
    /** creates the action with the handler script function */
    static CCCallFunc * create(LUA_FUNCTION nHandler);
};

/**
@brief Calls a 'callback' with the node as the first argument
N means Node
*/
class CCCallFuncN : public CCCallFunc
{
    /** creates the action with the handler script function */
    static CCCallFuncN * create(LUA_FUNCTION nHandler);
};

// end of actions group
/// @}
