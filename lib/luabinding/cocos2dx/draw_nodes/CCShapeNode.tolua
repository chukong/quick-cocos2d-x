/****************************************************************************
 Copyright (c) 2010-2012 cocos2d-x.org
 Copyright (c) 2008-2010 Ricardo Quesada
 Copyright (c) 2011      Zynga Inc.

 http://www.cocos2d-x.org

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 ****************************************************************************/

class CCShapeNode : public CCNode
{
    ccColor4F getLineColor(void);
    void setLineColor(ccColor4F color);
    float getLineWidth(void);
    void setLineWidth(float lineWidth);
    GLushort getLineStipple(void);
    void setLineStipple(GLushort pattern);
    bool isLineStippleEnabled(void);
    void setLineStippleEnabled(bool lineStippleEnabled);
};

class CCCircleShape : public CCShapeNode
{
    static CCCircleShape* create(float radius);

    float getRadius(void);
    void setRadius(float radius);
    float getAngle(void);
    void setAngle(float angle);
    unsigned int getSegments(void);
    void setSegments(unsigned int segments);
    bool isDrawLineToCenter(void);
    void setDrawLineToCenter(bool drawLineToCenter);
};

class CCRectShape : public CCShapeNode
{
    static CCRectShape* create(CCSize size);

    CCSize getSize(void);
    void setSize(CCSize size);
    bool isFill(void);
    void setFill(bool fill);
};

class CCPointShape : public CCShapeNode
{
    static CCPointShape* create(void);
};

class CCPolygonShape : public CCShapeNode
{
    static CCPolygonShape* create(CCPointArray* vertices);
    bool isFill(void);
    void setFill(bool fill);
    bool isClose(void);
    void setClose(bool close);
};
