/****************************************************************************
Copyright (c) 2013 cocos2d-x.org

http://www.cocos2d-x.org

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
****************************************************************************/

class CCBone : public CCNode
{
    /**
     * Allocates and initializes a bone.
     *
     * @param  name If name is not null, then set name to the bone's name
     * @return A initialized bone which is marked as "autorelease".
     */
    static CCBone *create(const char *name);

    /**
     * Allocates and initializes a bone.
     * @return A initialized bone which is marked as "autorelease".
     */
    static CCBone *create();

    /**
     * Add display and use  _DisplayData init the display.
     * If index already have a display, then replace it.
     * If index is current display index, then also change display to _index
     *
     * @param displayData it include the display information, like DisplayType.
     *          If you want to create a sprite display, then create a CCSpriteDisplayData param
     *
     *  @param  _index the index of the display you want to replace or add to
     *          -1 : append display from back
     */
    void addDisplay(CCDisplayData *displayData, int index);

	// zrong 2013-11-06 from https://github.com/cocos2d/cocos2d-x/commit/af754bfe5d1b28b072ec14ed5ffc1900f06a7e95
	void removeDisplay(int index);

    void changeDisplayByIndex(int index, bool force);

    /**
     * Add a child to this bone, and it will let this child call setParent(CCBone *_parent) function to set self to it's parent
     *  @param  _child  the child you want to add
     */
    void addChildBone(CCBone *_child);

    /**
     * Get parent bone
     * @return parent bone
     */
    CCBone *getParentBone();

    /**
     * Remove itself from its parent CCBone.
     * @param   recursion    whether or not remove Child display
     */
    void removeFromParent(bool recursion = true);

    /**
     * Removes a child CCBone
     * @param   bone   the bone you want to remove
     */
    void removeChildBone(CCBone *bone, bool recursion = true);

    /*
     *  When CCArmature play a animation, if there is not a CCMovementBoneData of this bone in this CCMovementData, this bone will hide.
     *  Set IgnoreMovementBoneData to true, then this bone will also show.
     */
    setIgnoreMovementBoneData(bool);
    bool getIgnoreMovementBoneData();

    std::string getName();
};
